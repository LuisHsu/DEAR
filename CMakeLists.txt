cmake_minimum_required(VERSION 3.0)
project(dear)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -g")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Werror")
set(CMAKE_DEBUG_POSTFIX "_d")
set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L/usr/local/lib -lvulkan -levent -lpthread")
set(GLSLANG_VALIDATOR ${CMAKE_CURRENT_LIST_DIR}/tools/glslangValidator)

find_package(Wayland REQUIRED)
if(WAYLAND_FOUND)
include_directories(${WAYLAND_CLIENT_INCLUDE_DIR} ${WAYLAND_SERVER_INCLUDE_DIR})
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${WAYLAND_CLIENT_LIBRARIES} ${WAYLAND_SERVER_LIBRARIES}")
endif(WAYLAND_FOUND)

option(XCB_SUPPORT "Support XCB" ON)
if(XCB_SUPPORT)
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -lxcb -lX11 -lX11-xcb")
add_definitions(-DXCB_SUPPORT)
add_definitions(-DVK_USE_PLATFORM_XCB_KHR)
endif(XCB_SUPPORT)

file(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/frag)
file(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/vert)

add_subdirectory(src/dearDM)
add_subdirectory(src/greeter)
